version: 2.1

orbs:
  kube-orb: circleci/kubernetes@1.3.1
  helm: circleci/helm@3.0.2

commands:
  install-helmfile:
    description: Install helmfile
    steps:
      - run:
          name: Install helmfile
          command: ./circleci-scripts/install-helmfile.sh

  checkout-app:
    description: Checkout app
    steps:
      - run:
          name: Checkout API
          command: |
            git clone git@github.com:freeverseio/laos-public-docs.git
            cd laos-public-docs
            git checkout


  dockerize-and-push:
    parameters:
      image:
        type: string
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Docker login
          command: echo $DOCKER_PASSWD | docker login -u $DOCKER_ID --password-stdin
      - run:
          name: Build and push Docker image
          command: |
            docker build -t << parameters.image >>:$CIRCLE_SHA1 .
            docker push << parameters.image >>:$CIRCLE_SHA1

jobs:
  build-app:
    parameters:
      image:
        type: string
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout-app
      - dockerize-and-push:
          image: << parameters.image >>

  deploy_to_cluster:
    parameters:
      environment:
        type: string
        default: development
    description: Deploy to << parameters.environment >> environment
    docker:
      - image: cimg/deploy:2023.09
    steps:
      - checkout
      - kube-orb/install-kubectl:
          kubectl-version: 'v1.25.14'
      - when:
          condition:
            equal: [ development, << parameters.environment >> ]
          steps:
            - kube-orb/install-kubeconfig:
                kubeconfig: KUBECONFIG_DATA
      - when:
          condition:
            equal: [ staging, << parameters.environment >> ]
          steps:
            - kube-orb/install-kubeconfig:
                kubeconfig: KUBECONFIG_LAOSDOCS_STG_DATA
      - when:
          condition:
            equal: [ production, << parameters.environment >> ]
          steps:
            - kube-orb/install-kubeconfig:
                kubeconfig: KUBECONFIG_LAOSDOCS_PRO_DATA
      - helm/install_helm_client:
          version: v3.13.0
      - install-helmfile
      - run:
          name: Deploy to << parameters.environment >> environment
          command: |
            echo "Deploying to << parameters.environment >> environment"
            cd deployment
            helmfile sync --environment << parameters.environment >>

  deployment-test:
    docker:
      - image: cimg/base:2022.08
    steps:
      - checkout
      - helm/install_helm_client:
          version: v3.13.0
      - install-helmfile
      - run:
          name: Test Helmfile
          command: |
            cd deployment
            helmfile lint


workflows:
  ci-workflow:
    jobs:
      - build-app:
          name: build-laos-public-docs
          image: freeverseio/laos-public-docs
          context: dockerhub

      - deployment-test:
          name: deployment-test

      - approval:
          type: approval
          name: dev-approve-deploy
          requires:
            - build-laos-public-docs
            - deployment-test
          filters:
            branches:
              only:
                - main

      - approval:
          type: approval
          name: stg-approve-deploy
          requires:
            - build-laos-public-docs
            - deployment-test
          filters:
            branches:
              only:
                - main

      - approval:
          type: approval
          name: pro-approve-deploy
          requires:
            - deployment-test
            - build-laos-public-docs
          filters:
            branches:
              only:
                - main
      
      - deploy_to_cluster:
          name: deploy-to-dev
          requires:
            - dev-approve-deploy
          environment: development
          filters:
            branches:
              only:
                - main
          
      - deploy_to_cluster:
          name: deploy-to-stg
          requires:
            - stg-approve-deploy
          environment: staging
          filters:
            branches:
              only:
                - main

      - deploy_to_cluster:
          name: deploy-to-pro
          requires:
            - pro-approve-deploy
          environment: production
          filters:
            branches:
              only:
                - main
